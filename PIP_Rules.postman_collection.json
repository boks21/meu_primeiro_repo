{
	"info": {
		"_postman_id": "30e63d1c-33e3-4108-8c88-af0435647854",
		"name": "PIP_Rules",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Rules",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f9c59e87-e08e-4c81-bc2f-eada8883d72a",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[data.desc_test_status_code] = responseCode.code === data.expected_status_code;",
							"",
							"if(responseCode.code === 200){",
							"",
							"    var resultsLength = jsonData.result.length;",
							"",
							"    pm.test(data.desc_test_expected_key_modelTypeCode, function () { //testa o modelTypeCode",
							"        for(var i =0; i< resultsLength; ++i ){",
							"            ",
							"                var contains = false;",
							"                ",
							"                for (var key in jsonData.result[i].modelType) {",
							"                     if (key === data.expected_key_modelTypeCode) {",
							"                        contains = true;",
							"                    }",
							"                }",
							"                pm.expect(contains).to.be.true;",
							"        }",
							"    });",
							"    ",
							"   pm.test(data.desc_test_expected_key_active_feature_list, function () {//testa a existencia da Act Feat List ",
							"        for(var i =0; i< resultsLength; ++i ){",
							"",
							"                var contains = false;",
							"",
							"                for (var key in jsonData.result[i].rule) {",
							"                     if (key === data.expected_key_active_feature_list) {",
							"                        contains = true;",
							"                    }",
							"        ",
							"                }",
							"                pm.expect(contains).to.be.true;",
							"        }",
							"    });",
							"    ",
							"    ",
							"   pm.test(data.desc_test_expected_key_condition_feature_list, function () {//testa a existencia da Condition Feat List ",
							"        for(var i =0; i< resultsLength; ++i ){",
							"",
							"                var contains = false;",
							"",
							"                for (var key in jsonData.result[i].rule) {",
							"                     if (key === data.expected_key_condition_feature_list) {",
							"                        contains = true;",
							"                    }",
							"        ",
							"                }",
							"                pm.expect(contains).to.be.true;",
							"        }",
							"    });",
							"",
							"   pm.test(data.desc_test_expected_key_featureCode, function () {//testa a existencia do featureCode na activeFeatureList",
							"   ",
							"        for(var i =0; i< resultsLength; ++i ){",
							" ",
							"            for( var j=0; j<jsonData.result[i].rule.activeFeatureList.length; ++j ){",
							"                ",
							"                var contains = false;",
							"                var featureOption = jsonData.result[i].rule.activeFeatureList[j].feature.option;",
							"                ",
							"                for (var key in featureOption) {",
							"                     if (key === data.expected_key_featureCode) {",
							"                        contains = true;",
							"                    }",
							"                }",
							"                pm.expect(contains).to.be.true;",
							"            }",
							"            ",
							"        }",
							"    });",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"eopDate\": {\r\n\t\"greaterOrEqual\": \"{{eopdate}}\"\r\n  },\r\n  \"sopDate\": {\r\n\t\"lowerOrEqual\": \"{{sopdate}}\"\r\n  },\r\n  \"modelTypeQualifiers\": [\r\n    \"{{modeltype}}\"\r\n  ],\r\n  \"featureCodes\": [\r\n    \"{{featurecodes}}\"\r\n  ]\r\n}"
				},
				"url": {
					"raw": "https://oka-business-pskd-sprint-test.mp-dev-cnap.bmwgroup.net/query-rule/rule-uses-ag/incl-excl/v1:search",
					"protocol": "https",
					"host": [
						"oka-business-pskd-sprint-test",
						"mp-dev-cnap",
						"bmwgroup",
						"net"
					],
					"path": [
						"query-rule",
						"rule-uses-ag",
						"incl-excl",
						"v1:search"
					]
				}
			},
			"response": []
		}
	]
}